#include "imports/stdlib.fc";
#include "imports/params.func";

int workchain() asm "0 PUSHINT";

cell JETTON_WALLET_CODE() inline {
    slice code_slice = "b5ee9c72010101010023000842028f452d7a4dfd74066b682365177259ed05734435be76b5fd4bd5d8af2b7c3d68"s;
    return begin_cell().store_slice(code_slice).end_cell();
}

cell pack_jetton_wallet_data(int balance, slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
    return  begin_cell()
        .store_coins(balance)
        .store_slice(owner_address)
        .store_slice(jetton_master_address)
        .store_ref(jetton_wallet_code)
        .end_cell();
}

cell calculate_jetton_wallet_state_init(slice owner_address, slice jetton_master_address, cell jetton_wallet_code) inline {
    return begin_cell()
        .store_uint(0, 2)
        .store_dict(jetton_wallet_code)
        .store_dict(pack_jetton_wallet_data(0, owner_address, jetton_master_address, jetton_wallet_code))
        .store_uint(0, 1)
        .end_cell();
}

slice calculate_jetton_wallet_address(cell state_init) inline {
    return begin_cell().store_uint(4, 3)
        .store_int(workchain(), 8)
        .store_uint(cell_hash(state_init), 256)
        .end_cell()
        .begin_parse();
}

slice calculate_user_jetton_wallet_address(slice owner_address, slice jetton_master_address) inline {
    return calculate_jetton_wallet_address(calculate_jetton_wallet_state_init(owner_address, jetton_master_address, JETTON_WALLET_CODE()));
}

() send_tokens(slice jetton_wallet, slice to_address, int amount, slice response_address, int query_id) impure {
    cell msg_body = begin_cell()
        .store_uint(0xf8a7ea5, 32)  ;; op::transfer in Jetton standard
        .store_uint(query_id, 64)
        .store_coins(amount)
        .store_slice(to_address)
        .store_slice(response_address)
        .store_uint(0, 1)  ;; null custom_payload
        .store_coins(0)  ;; forward_ton_amount
        .store_uint(0, 1)  ;; forward_payload in this slice, not separate cell
        .end_cell();

    cell msg = begin_cell()
        .store_uint(0x18, 6)
        .store_slice(jetton_wallet)
        .store_coins(50000000)  ;; 0.05 TON for fees
        .store_uint(1, 1 + 4 + 4 + 64 + 32 + 1 + 1)
        .store_ref(msg_body)
        .end_cell();

    send_raw_message(msg, 1);  ;; mode 1 to add fees from contract balance
}
