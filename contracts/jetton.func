#include "imports/stdlib.fc";
#include "imports/common.fc";
#include "imports/params.func";
#include "imports/error-codes.fc";

#include "swap.func";
#include "bridge.func";

;; This operation is called when the contract receives a notification about a token transfer
() handle_transfer_notification(slice sender_address, slice in_msg_body) impure {
    (int jetton_amount, slice from_user) = (in_msg_body~load_coins(), in_msg_body~load_msg_addr());

    cell ref_cs = in_msg_body~load_ref();
    slice ref_ds = ref_cs.begin_parse();
    int action_op = ref_ds~load_uint(32);

    if (action_op == op::swap_from_jetton) {
        handle_swap_from_jetton(jetton_amount, ref_ds, sender_address);
    } elseif (action_op == op::swap_callback) {
        handle_swap_callback(jetton_amount, sender_address, ref_ds);
    } elseif (action_op == op::bridge_out) {
        handle_bridge_out(jetton_amount, sender_address, ref_ds);
    } else {
        throw(0xffff); ;; if the message contains an op that is not known to this contract, we throw
    }
}
